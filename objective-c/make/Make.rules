# **********************************************************************
#
# Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************

# ----------------------------------------------------------------------
# Don't change anything below this line!
# ----------------------------------------------------------------------

-include	$(lang_srcdir)/config/Make.rules.$(os)

#
# Supported configurations
#
supported-configs	= shared static arc-shared arc-static

#
# Define the arc configuration to build the tests with ARC support.
#
# Note that we clear the dependency variable to not include the "arc"
# sub-configuration into the dependency name (for example, if "client"
# depends on "IceObjC", client[osx-arc-shared] will still depend on
# Ice[osx-shared] not Ice[osx-arc-shared]). This is necessary since
# we don't have an ARC specific build of the libraries.
#
arc_projects		:= %
arc_excludes		:= Database/library
arc_cppflags 		:= -fobjc-arc -fobjc-arc-exceptions
arc_dependency	 	:=

# Objective-C dependencies
objc-dependencies		:= IceObjC Glacier2ObjC IceGridObjC IceSSLObjC IceStormObjC
IceObjC_dependencies 		:= Ice
Glacier2ObjC_dependencies	:= IceObjC
IceGridObjC_dependencies    	:= Glacier2ObjC IceObjC
IcePatch2ObjC_dependencies  	:= IceObjC
IceSSLObjC_dependencies     	:= IceObjC
IceStormObjC_dependencies   	:= IceObjC

ice_configs			:= $(supported-configs)
ice_includedir			?= $(ice_home)$(if $(ice_src_dist),/objective-c)/include

$(foreach d,$(objc-dependencies),$(eval $$d_targetdir := $(ice_home)$(if $(ice_src_dist),/objective-c)/lib)\
				 $(eval $(call create-component-targets,ice,$d,library)))

slice2objc_targetext		= m
slice2objc_path			= $(ice_bindir)/slice2objc

#
# $(call make-cpp-demo-project,$1=project)
#
define make-objc-demo-project
$1_slicecompiler 	:= slice2objc
$1_sliceflags		:= -I$(ice_slicedir) -I$1 $$($1_sliceflags)
$1_cppflags		:= -I$(ice_includedir) $(if $(ice_src_dist),-I$(ice_includedir)/generated) \
			   -I$1 -I$1/generated $$($1_cppflags)
$1_ldflags              += -framework Foundation
$(make-project)
endef

#
# $(create-cpp-demo-project $1=demo)
#
define create-objc-demo-project
$1_srcext		:= m
$1_dependencies 	:= $$(or $$($1_dependencies),IceObjC)
$(create-demo-project)
endef
